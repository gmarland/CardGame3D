
@using System.Timers
@inject IJSRuntime JSRuntime

<div id="game-container"></div>

@code {

    public string Canvas { get; set; }

    private Timer _eventInputTimer = new Timer();

    private bool _activingEvents = false;
    private bool _isDrawing = false;
    private bool _retrievingInputs = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("startGame");

            _eventInputTimer.Interval = 0.01;
            _eventInputTimer.AutoReset = true;
            _eventInputTimer.Elapsed += new ElapsedEventHandler(EventInputTimerElapsed);
            _eventInputTimer.Start();
        }
    }

    private async void EventInputTimerElapsed(object sender, ElapsedEventArgs e)
    {
    }
}